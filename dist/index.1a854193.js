const positive_table=document.querySelector(".table-positive"),negative_table=document.querySelector(".table-negative"),balanceField=document.querySelector("#current-balance"),inputType=document.querySelector("#inputType"),inputDesp=document.querySelector("#inputDesp"),inputPrice=document.querySelector("#inputPrice"),inputSubmit=document.querySelector("#submitBtn"),despError=document.querySelector("#despError"),priceError=document.querySelector("#priceError"),typeError=document.querySelector("#typeError"),totalPositive=document.querySelector(".positive").children[2].children[1],totalNegative=document.querySelector(".negative").children[2].children[1];class data{constructor(e,t,n){this.id=String((new Date).getTime()).slice(6),this.type=e,this.desp=t,this.amount=+n}}class App{#e;#t;#n;#i;constructor(){localStorage.getItem("positive-movements")?this.#n=JSON.parse(localStorage.getItem("positive-movements")):(this.#n=[],localStorage.setItem("positive-movements",[])),localStorage.getItem("negative-movements")?this.#i=JSON.parse(localStorage.getItem("negative-movements")):(this.#i=[],localStorage.setItem("negative-movements",[])),this.loadBalance(),this.renderBalance(),this.onLoad(),this.addHandler(),this.renderTotals()}loadBalance(){this.#e=0,this.#n.forEach((e=>this.#e+=e.amount)),this.#i.forEach((e=>this.#e-=e.amount)),localStorage.setItem("balance",JSON.stringify(this.#e))}updateBalance(e,t=!1){t?this.#e-=e:this.#e+=e,localStorage.setItem("balance",this.#e)}onLoad(){let e="<thead>\n        <tr>\n            <th>Description</th>\n            <th>Amount</th>\n            <th>Edit</th>\n        </tr>\n    </thead>";positive_table.innerHTML=e,this.#n.forEach((e=>this.renderData(e,positive_table))),negative_table.innerHTML=e,this.#i.forEach((e=>this.renderData(e,negative_table)))}renderData(e,t){const n=`<tr class="data-field" data-id=${e.id}>\n        <td class="description-field">${e.desp}</td>\n        <td class="amount-field">${e.amount}</td>\n        <td><button id='del-${e.id}'>Delete</button></td>\n        </tr> `;t.insertAdjacentHTML("beforeend",n),this.addDeleteButtonHandler(e.id)}updateMovements(e){"Income"===e.type?(this.#n.push(e),localStorage.setItem("positive-movements",JSON.stringify(this.#n)),this.updateBalance(e.amount),this.renderData(e,positive_table)):(this.#i.push(e),localStorage.setItem("negative-movements",JSON.stringify(this.#i)),this.updateBalance(e.amount,!0),this.renderData(e,negative_table)),this.renderBalance()}renderTotals(){let e=0;for(let t=0;t<this.#i.length;t++)e+=this.#i[t].amount;let t=0;for(let e=0;e<this.#n.length;e++)t+=this.#n[e].amount;totalNegative.textContent=`${e} : ${Math.round(e/t*100)}%`,totalPositive.textContent=`${t}`}renderBalance(){balanceField.textContent=this.#e,this.#e>=0?balanceField.style.color="green":balanceField.style.color="red",this.renderTotals()}addData(e){e.preventDefault();let t=null,n=!1;"Select"===inputType.value?(t=despError.textContent,typeError.textContent="Only Income and Expense are allowed!!!",typeError.closest(".popup").classList.add("show"),n=!0):typeError.closest(".popup").classList.remove("show"),!inputDesp.value||inputDesp.value&&inputDesp.value.length>128?(inputDesp.value||(despError.textContent="Please add Description",despError.closest(".popup").classList.add("show"),n=!0),inputDesp.value&&inputDesp.value.length>128&&(despError.textContent="Despcription should be between 1 and 128 characters, Thank you!",despError.closest(".popup").classList.add("show"),n=!0)):despError.closest(".popup").classList.remove("show"),!inputPrice.value||!Number(inputPrice.value)||Number(inputPrice.value)<0?(priceError.closest(".popup").classList.add("show"),n=!0):priceError.closest(".popup").classList.remove("show"),n||(n=!1,this.updateMovements(new data(inputType.value,inputDesp.value,inputPrice.value)),this.clearInput())}clearInput(){document.querySelectorAll("input").forEach((e=>{"submit"!==e.type&&(e.value="")})),inputType.children[0].selected=!0,inputType.children[1].selected=!1,inputType.children[2].selected=!1,window.requestAnimationFrame(this.color.bind(this))}deleteMovement(e){for(let t=0;t<this.#n.length;t++)if(this.#n[t].id===e){this.#e-=+this.#n[t].amount,localStorage.setItem("balance",this.#e),this.#n.splice(t,1),localStorage.setItem("positive-movements",JSON.stringify(this.#n));break}for(let t=0;t<this.#i.length;t++)if(this.#i[t].id===e){this.#e-=+this.#i[t].amount,localStorage.setItem("balance",this.#e),this.#i.splice(t,1),localStorage.setItem("negative-movements",JSON.stringify(this.#i));break}this.renderBalance()}color(){"Income"===inputType.value?(inputSubmit.style.background=inputDesp.style.borderColor=inputPrice.style.borderColor="green",inputSubmit.style.color="white"):"Expense"==inputType.value?(inputSubmit.style.background=inputDesp.style.borderColor=inputPrice.style.borderColor="red",inputSubmit.style.color="white"):(inputSubmit.style.background=inputDesp.style.borderColor=inputPrice.style.borderColor="",inputSubmit.style.color="black")}addHandler(){document.querySelector("#form").addEventListener("submit",this.addData.bind(this)),window.addEventListener("load",this.color.bind(this)),inputType.addEventListener("change",this.color.bind(this))}delButton(e){confirm("Do you really want to delete the element")&&(this.deleteMovement(e.target.id.slice(4)),e.target.closest(".data-field").remove())}addDeleteButtonHandler(e){document.querySelector(`#del-${e}`).addEventListener("click",this.delButton.bind(this))}}const app=new App;
//# sourceMappingURL=index.1a854193.js.map
